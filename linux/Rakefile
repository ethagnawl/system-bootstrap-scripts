require 'open-uri'

module Utilities
  DRYRUN = ENV['DRYRUN'] || false

  LINEBREAK = '---------------------------------------------------------------------------------'

  def self.dryrun?
    Utilities::DRYRUN
  end

  def self.log(task)
    puts "", "#{task}", Utilities::LINEBREAK
  end

  def self.execute(command)
    system command unless self.dryrun?
  end

  def self.backticks(command)
    `#{command}` unless self.dryrun?
  end

end

task :upgrade do
  upgrade = "sudo apt-get upgrade"
  Utilities::log upgrade
  Utilities::execute upgrade
end

task :update do
  update = "sudo apt-get update"
  Utilities::log update
  Utilities::execute update
end

task :ssh do
  keygen = "ssh-keygen -t rsa"
  Utilities::log keygen
  Utilities::execute keygen
end

task system: [:update, :upgrade]

task :git do

  git = "sudo apt-get install git"
  Utilities::log git
  Utilities::execute git

  git_config_email = 'git config --global user.email "pdoherty926@gmail.com"'
  Utilities::log git_config_email
  Utilities::execute git_config_email

  git_config_username = 'git config --global user.name "Peter Doherty"'
  Utilities::log git_config_username
  Utilities::execute git_config_username

end

task :vundle do
  download_vundle = "git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim"
  Utilities::log download_vundle
  Utilities::execute download_vundle

  install_vundle = "vim +PluginInstall +qall"
  Utilities::log install_vundle
  Utilities::execute install_vundle
end

task :pathogen do
  download_and_install_pathogen = "mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim"
  Utilities::log download_and_install_pathogen
  Utilities::execute download_and_install_pathogen
end

task :_vim do
  vim = "sudo apt-get install vim"
  Utilities::log vim
  Utilities::execute vim
end

task vim: [:_vim, :pathogen, :vundle]

task :curl do
  curl = "sudo apt-get install curl"
  Utilities::log curl
  Utilities::execute curl
end

task :heroku do
  Utilities::log "download and execute heroku toolbelt installer"
  Utilities::execute "wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh"
end

task :xsel do
  xsel = "sudo apt-get install xsel"
  Utilities::log xsel
  Utilities::execute xsel
end

task :xchat do
  xchat = "sudo apt-get install xchat"
  Utilities::log xchat
  Utilities::execute xchat
end

task :ack do
  ack = "sudo apt-get install ack-grep"
  Utilities::log ack
  Utilities::execute ack
end

task :tmux do
  tmux = "sudo apt-get install tmux"
  Utilities::log tmux
  Utilities::execute tmux
end

task :tree do
  tree = "sudo apt-get install tree"
  Utilities::log tree
  Utilities::execute tree
end

task :sublime_text do
  add_ppa = "sudo add-apt-repository ppa:webupd8team/sublime-text-3"
  Utilities::log add_ppa
  Utilities::execute add_ppa

  Rake::Task["update"].execute

  install = "sudo apt-get install sublime-text-installer"
  Utilities::log install
  Utilities::execute install
end

task editors: [:vim, :sublime_text]

task :bundler do
  bundler = "cd ~ && gem install bundler"
  Utilities::log bundler
  Utilities::execute bundler
end

task :rails do
  rails = "cd ~ && gem install rails"
  Utilities::log rails
  Utilities::execute rails
end

task :pry do
  pry = "cd ~ && gem install pry"
  Utilities::log pry
  Utilities::execute pry
end

task :tmuxinator do
  tmuxinator = "cd ~ && gem install tmuxinator"
  Utilities::log tmuxinator
  Utilities::execute tmuxinator
end

task gems: [:bundler, :rails, :pry, :tmuxinator]

task :rvm do
  add_keys = "gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3"
  Utilities::log add_keys
  Utilities::execute add_keys

  download_install_script = "curl -sSL https://get.rvm.io | bash -s stable --ruby"
  Utilities::log download_install_script
  Utilities::execute download_install_script
end

task ruby: [:rvm, :gems]

task :postgres do
  postgres = "sudo apt-get install postgresql postgresql-server-dev-all"
  Utilities::log postgres
  Utilities::execute postgres
end

task :nvm do
  version = 'stable'

  Utilities::log "download and install nvm"
  Utilities::execute "curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash"

  Utilities::log "install latest nvm"
  Utilities::execute ". ~/.nvm/nvm.sh && nvm install #{version}"

  # use_stable_as_default = 'nvm alias default stable'
  # Utilities::log "append `#{use_stable_as_default}` to .bashrc"
  # Utilities::execute "echo '#{use_stable_as_default}' >> ~/.bashrc"
end

task node: [:nvm]

task :jre do
  jre = "sudo apt-get install default-jre"
  Utilities::log jre
  Utilities::execute jre
end

task :jdk do
  jdk = "sudo apt-get install default-jdk"
  Utilities::log jdk
  Utilities::execute jdk
end

task :java_home do
  Utilities::log "set JAVA_HOME"
  path = Utilities::backticks("which java").chomp
  Utilities::execute "echo JAVA_HOME=#{path} >> ~/.bashrc"
end

task java: [:jre, :jdk, :java_home]

task :leinengen do
  Utilities::log "download lein install script"
  Utilities::execute "wget -O lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein"

  Utilities::log "move lein into path"
  Utilities::execute "mv lein ~/bin"

  Utilities::log "make lein executable"
  Utilities::execute "chmod 755 ~/bin/lein"

  Utilities::log "install lein"
  Utilities::execute "bash ~/bin/lein"
end

task :boot do
  url = "https://raw.githubusercontent.com/boot-clj/boot/master/version.properties"
  content = open(url).read
  version = content.split('version=').last.chomp

  Utilities::log "download boot install script - version #{version}"
  Utilities::execute "wget -O boot https://github.com/boot-clj/boot/releases/download/#{version}/boot.sh"

  Utilities::log "chmod a+x boot"
  Utilities::execute "chmod a+x boot"

  Utilities::log "sudo mv boot /usr/local/bin"
  Utilities::execute "sudo mv boot /usr/local/bin"
end

task clojure: [:leinengen, :boot]

task :dotfiles do
  dotfiles_path = "https://github.com/ethagnawl/dotfiles"
  Utilities::log "clone dotfiles"
  Utilities::execute "cd ~ && git clone #{dotfiles_path}"

  Utilities::log "symlink .vimrc"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.vimrc ."

  Utilities::log "symlink .tmux.conf"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.tmux.conf ."

  Utilities::log "symlink .gemrc"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.gemrc ."

  Utilities::log "symlink .pryrc"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.pryrc ."

  Utilities::log "symlink .inputrc"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.inputrc ."

  Utilities::log "symlink .nvmrc"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.nvmrc ."

  Utilities::log "symlink ssh config"
  Utilities::execute "cd ~ && ln -s ~/dotfiles/.ssh-config ~/.ssh/config"

  Utilities::log "symlink lubuntu-rc.xml"
  Utilities::execute "ln -s ~/dotfiles/linux/lubuntu/lubuntu-rc.xml ~/.config/openbox/"

  Utilities::log "append `source ~/dotfiles/bashrc` to .bashrc"
  Utilities::execute "echo 'source ~/dotfiles/bashrc' >> ~/.bashrc"
end

task :racket do
  racket = "sudo apt-get install racket"
  Utilities::log racket
  Utilities::execute racket
end

task :haskell do
  haskell = "sudo apt-get install ghc"
  Utilities::log haskell
  Utilities::execute haskell
end

task :keepassx do
  keepassx = "sudo apt-get install keepassx"
  Utilities::log keepassx
  Utilities::execute keepassx
end

task :dmenu do
  keepassx = "sudo apt-get install dmenu"
  Utilities::log dmenu
  Utilities::execute dmenu
end

task :htop do
  htop = "sudo apt-get install htop"
  Utilities::log htop
  Utilities::execute htop
end

task :rlwrap do
  rlwrap = "sudo apt-get install rlwrap"
  Utilities::log rlwrap
  Utilities::execute rlwrap
end

task :gimp do
  gimp = "sudo apt-get install gimp"
  Utilities::log gimp
  Utilities::execute gimp
end

task :chrome do
  get_key = "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -"
  Utilities::log get_key
  Utilities::execute get_key

  add_ppa = 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
  Utilities::log add_ppa
  Utilities::execute add_ppa

  Rake::Task["update"].execute

  chrome = "sudo apt-get install google-chrome-unstable"
  Utilities::log chrome
  Utilities::execute chrome
end

task :dropbox do
  dropbox = "sudo apt-get install nautilus-dropbox"
  Utilities::log dropbox
  Utilities::execute dropbox
end

task :torbrowser_launcher do
  add_torbrowser_launcher_ppa = "sudo add-apt-repository ppa:micahflee/ppa"
  Utilities::log add_torbrowser_launcher_ppa
  Utilities::execute add_torbrowser_launcher_ppa

  Rake::Task["update"].execute

  install_torbrowser_launcher = "sudo apt-get install torbrowser-launcher"
  Utilities::log install_torbrowser_launcher
  Utilities::execute install_torbrowser_launcher
end

task applications: [:keepassx, :chrome, :dropbox, :dmenu, :rlwrap, :htop, :gimp, :torbrowser_launcher]

task linux: [
              :system,
              :ssh,
              :git,
              :ack,
              :tmux,
              :tree,
              :xsel,
              :xchat,
              :curl,
              :heroku,
              :dotfiles,
              :editors,
              :postgres,
              :ruby,
              :node,
              :java,
              :clojure,
              :haskell,
              :racket,
              :applications
            ] do |t|

end

task default: %w[linux]
